m4 = lm(poverty ~ cdep + hinc)
summary(m4)
plot(poverty, m4$residuals)
summary(lm(poverty ~ hinc))
summary(lm(cdep ~ poverty)) #
-3.02315*1.56001
#
summary(lm(cdep ~ hinc))
3*1.5
summary(lm(cdep ~ hinc + poverty))
knitr::opts_chunk$set(echo = TRUE)
library(pacman)
p_load(tidyverse, psych, gridExtra, foreign, stargazer, ggcorrplot, coefplot, kableExtra)
# If you didn't finished above exercise, run:
load("data/earnings_df.RData")
# Remove non-numeric variables
earnings_df <- earnings_df %>%
select(-unique_id, -sex, -race, -age)
# Remove non-numeric variables
earnings_df <- earnings_df %>%
select(-sex, -race, -age)
View(earnings_df)
# If you didn't finished above exercise, run:
load("data/earnings_df.RData")
# Remove non-numeric variables
earnings_df_cat <- earnings_df %>%
select(-female, -black, -other)
# Correlation Matrix
## Set use = "complete.obs" to ignore observations with NAs
M <- cor(earnings_df_cat, use = "complete.obs")
# Save the matrix to a dataframe, then use `ggcorrplot` to visualize
# (there are other packages for this task)
ggcorrplot(as.data.frame(M),
hc.order = TRUE,
type = "lower",
lab = TRUE)
M
# Save the matrix to a dataframe, then use `ggcorrplot` to visualize
# (there are other packages for this task)
ggcorrplot(as.data.frame(M),
hc.order = TRUE,
type = "lower",
lab = TRUE)
M
m4 <- lm(earn ~ age_recode + edu + female + black + other,
data = earnings_df)
m5 <- lm(earn ~ age_recode + edu + female + black + other + edu*female,
data = earnings_df)
# Examine models
stargazer(m4, m5, type="text", omit.stat=c("ser", "f"))
m6 <- lm(earn ~ age_recode + edu + female + black + other + edu*black + edu*other,
data = earnings_df)
# Examine models
stargazer(m4, m5, m6, type="text", omit.stat=c("ser", "f"))
# Examine models
stargazer(m4, m5, m6, type="text",
omit.table.layout = "sn", star.char = c("+", "*", "**", "***"),
star.cutoffs = c(0.1, 0.05, 0.01, 0.001))
# Examine models
stargazer(m4, m5, m6, type="text",
star.char = c("+", "*", "**", "***"),
star.cutoffs = c(0.1, 0.05, 0.01, 0.001))
# Examine models
stargazer(m4, m5, m6,
star.char = c("*", "**", "***"),
star.cutoffs = c(0.05, 0.01, 0.001),
type="text")
# Defualt coefficient plot
coefplot(m5)
# Remove the intercept from the plot
coefplot(m5, intercept = F)
# The default innerCI is 1, which is 1 se around the point estimate
# the default outerCI is 2, which is 2 se around the point estimate
# You can set both to 1.96, which is the 95% confidence interval of betas
coefplot(m5, intercept = F, innerCI = 1.96, outerCI = 1.96)
# Or only keep the outerCI = 1.96
coefplot(m5, intercept = T, innerCI = F, outerCI = 1.96)
# You can also change the color, shape, and size of the texts
# as well as change plot titles and axes labels
# read the documentation for more
coefplot(m5, intercept = F, innerCI = F, outerCI = 1.96,
color = "black",                         # customize color
title = "Coefficient Plot for Model 5")  # customize title
# Remove the intercept from the plot
coefplot(m5, intercept = "none")
# Remove the intercept from the plot
coefplot(m5, intercept = F)
# Defualt coefficient plot
coefplot(m5)
# First, we create a dataframe with all predictor variables
# with only the key IV varies
pred_IV <- tibble(edu = rep(0:15, 2)) %>%         #first, create a df with values of your key IV
mutate(female = c(rep(0, 16), rep(1, 16)),       #b/c we are looking at interaction effects,
#give gender two values, otherwise fix it at mean
age_recode =  mean(earnings_df$age_recode, na.rm = T),   # fix other variabes at mean
black = mean(earnings_df$black),
other = mean(earnings_df$other))
# Examine the df
head(pred_IV, 20) %>% kbl("html") %>% kable_classic_2(full_width = F)
# use `predict` to predict the Y
predicted_earning <- predict(m5,                      # the model you are using
pred_IV,                # the df you use for predicting
interval = "confidence", # set CI
level = 0.95)
# bind the columns
pred_result <- cbind(pred_IV, predicted_earning)
# check df
head(pred_result, 20) %>% kbl("html") %>% kable_classic_2(full_width = F)
# Plot
pred_result %>%
mutate(gender = ifelse(female == 0, "Male", "Female")) %>%       # Covert dummy to character variable
ggplot(aes(x = edu, y = fit)) +
geom_line(aes(linetype = gender)) +                              # group linetype by gender
geom_ribbon(aes(ymin = lwr, ymax = upr, fill = gender), alpha = 0.3) +   # add 95% CI
theme_classic() +
labs(x = "Years of Education",
y = "Predicted Earnings") +
ggtitle("Predicted Earnings by Education and Gender",
subtitle = "(Modeled with interaction between education and gender)")
10.21/(3.59)^2
14.38-0.79*12.5
10.21/(3.59*3.29)
0.86^2
sum(is.na(earnings_df$age_recode))
knitr::opts_chunk$set(echo = TRUE)
library(pacman)
p_load(tidyverse, psych, gridExtra, foreign, stargazer, ggcorrplot, coefplot, kableExtra)
# Run models
m4 <- lm(earn ~ age_recode + edu + female + black + other,
data = earnings_df)
m5 <- lm(earn ~ age_recode + edu + female + black + other + edu*female,
data = earnings_df)
m6 <- lm(earn ~ age_recode + edu + female + black + other + edu*black + edu*other,
data = earnings_df)
# Examine models
stargazer(m4, m5, m6,
star.char = c("*", "**", "***"),
star.cutoffs = c(0.05, 0.01, 0.001),
type="latex")
knitr::opts_chunk$set(echo = TRUE)
library(pacman)
p_load(tidyverse, psych, gridExtra, foreign, stargazer, ggcorrplot, coefplot, kableExtra)
x <- runif(1000,0,2)
z <- 0.2*x + rnorm(1000,0,0.5)
y <- 10 + 2*x + z + rnorm(1000,0,1)
plot(x,z)
plot(x,y-10-2*x)
x <- runif(1000,0,2)
z <- 0.2*x + rnorm(1000,0,10)
y <- 10 + 2*x + z + rnorm(1000,0,1)
plot(x,y-10-2*x)
x <- runif(1000,0,10)
z <- 0.2*x + rnorm(1000,0,10)
y <- 10 + 2*x + z + rnorm(1000,0,1)
plot(x,y-10-2*x)
plot(x,z)
## read data
earnings_df <- read.csv("data/lab5_earnings.csv")
View(earnings_df)
View(earnings_df)
unique(earnings_df$race)
knitr::opts_chunk$set(echo = TRUE)
## load packages
library(pacman)
p_load(tidyverse, psych, gridExtra, foreign, stargazer, ggcorrplot, coefplot, kableExtra)
m5 <- lm(earn ~ age_recode + edu + female + black + other + edu*female,
data = earnings_df)
View(earnings_df)
load("data/earnings_df.RData")
load("data/earnings_df.RData")
load("data/earnings_df.RData")
View(earnings_df)
m5 <- lm(earn ~ age + edu + female + black + other + edu*female,
data = earnings_df)
## read data
earnings_df <- read.csv("data/lab5_earnings.csv", stringsAsFactors = F)
m5 <- lm(earn ~ age + edu + female + black + other + edu*female,
data = earnings_df)
load("data/earnings_df.RData")
View(earnings_df)
knitr::opts_chunk$set(echo = TRUE)
## load packages
library(pacman)
p_load(tidyverse, psych, gridExtra, foreign, stargazer, ggcorrplot, coefplot, kableExtra)
## read data
load("data/earnings_df.RData")
m5 <- lm(earn ~ age + edu + female + black + other + edu*female,
data = earnings_df)
m5 <- lm(earn ~ age_recode + edu + female + black + other + edu*female,
data = earnings_df)
## defualt coefficient plot
coefplot(m5)
## you can also change the color, shape, and size of the texts
## as well as change plot titles and axes labels
## read the documentation for more
coefplot(m5, intercept = F, innerCI = F, outerCI = 1.96,
color = "black",                         ## customize color
title = "Coefficient Plot for Model 5")  ## customize title
## you can also change the color, shape, and size of the texts
## as well as change plot titles and axes labels
## read the documentation for more
coefplot(m5, intercept = F, innerCI = F, outerCI = 1.96,
color = "black",                         ## customize color
title = "Coefficient Plot for Model 5") + theme_bw()  ## customize title
## you can also change the color, shape, and size of the texts
## as well as change plot titles and axes labels
## read the documentation for more
coefplot(m5, intercept = F, innerCI = F, outerCI = 1.96,
color = "black",                         ## customize color
title = "Coefficient Plot for Model 5")  ## customize title
## coefplot is build upon ggplot2
## almost all functions in ggplot2 would work
coefplot(m5, intercept = F, innerCI = F, outerCI = 1.96,
color = "black",
title = "Coefficient Plot for Model 5") +
theme_classic()
## coefplot is build upon ggplot2
## almost all functions in ggplot2 would work
coefplot(m5, intercept = F, innerCI = F, outerCI = 1.96,
color = "black",
title = "Coefficient Plot for Model 5") +
theme_bw()
## coefplot is build upon ggplot2
## almost all functions in ggplot2 would work
coefplot(m5, intercept = F, innerCI = F, outerCI = 1.96,
color = "black",
title = "Coefficient Plot for Model 5") +
theme_bw() +
xlab("x")
## coefplot is build upon ggplot2
## almost all functions in ggplot2 would work
coefplot(m5, intercept = F, innerCI = F, outerCI = 1.96,
color = "black",
title = "Coefficient Plot for Model 5") +
theme_bw() +
xlab("Coefficient") +
ylab("Variables")
## coefplot is build upon ggplot2
## almost all functions in ggplot2 would work
coefplot(m5, intercept = F, innerCI = F, outerCI = 1.96,
color = "black",
title = "Coefficient Plot for Model 5") +
theme_bw() +
xlab("Coefficient") +
ylab("Variables") +
theme(plot.title = element_text(hjust = 0.5))
View(earnings_df)
knitr::opts_chunk$set(echo = TRUE)
## load packages
library(pacman)
p_load(tidyverse, psych, gridExtra, foreign, stargazer, ggcorrplot, coefplot, kableExtra)
## read data
load("data/earnings_df.RData")
View(earnings_df)
## read data
earnings_df <- read.csv("data/lab5_earnings.csv", stringsAsFactors = F)
View(earnings_df)
hist(earnings_df$age)
## recode age
earnings_df <-
earnings_df %>%
mutate(age = case_when(
age > 9000 ~ NA,
.default = age
))
## read data
earnings_df <- read.csv("data/lab5_earnings.csv", stringsAsFactors = F)
## recode age
earnings_df <-
earnings_df %>%
mutate(age = case_when(
age > 9000 ~ NA
))
View(earnings_df)
## read data
earnings_df <- read.csv("data/lab5_earnings.csv", stringsAsFactors = F)
## recode age
earnings_df <-
earnings_df %>%
mutate(age = case_when(
age > 9000 ~ NA
))
## read data
earnings_df <- read.csv("data/lab5_earnings.csv", stringsAsFactors = F)
## recode age
earnings_df <-
earnings_df %>%
mutate(age = case_when(
age > 9000 ~ NA,
.default = age
))
## recode female
earnings_df <-
earnings_df %>%
mutate(female = case_when(
sex == "female" ~ 1,
.default = 0
))
## read data
earnings_df <- read.csv("data/lab5_earnings.csv", stringsAsFactors = F)
earnings_df$female <- 0
## create black and other
earnings_df <-
earnings_df %>%
mutate(black = case_when(
race == "black" ~ 1,
.default = 0
)) %>%
mutate(other = case_when(
race == "other" ~ 1,
.default = 0
))
## base R way of doing it
earnings_df$female <- 0
earnings_df[earnings_df$sex=="female", "female"] <- 1
describe(earnings_df)
## read data
earnings_df <- read.csv("data/lab5_earnings.csv", stringsAsFactors = F)
## recode age
earnings_df <-
earnings_df %>%
mutate(age = case_when(
age > 9000 ~ NA,
.default = age
))
## recode female
earnings_df <- earnings_df %>%
mutate(female = case_when(
sex == "female" ~ 1,
.default = 0))
## base R way of doing it
earnings_df$female <- 0
earnings_df[earnings_df$sex=="female", "female"] <- 1
## create black and other
earnings_df <-
earnings_df %>%
mutate(black = case_when(
race == "black" ~ 1,
.default = 0
)) %>%
mutate(other = case_when(
race == "other" ~ 1,
.default = 0
))
describe(earnings_df)
m1 <- lm(earn ~ age,
data = earnings_df)
m2 <- lm(earn ~ age + edu,
data = earnings_df)
m3 <- lm(earn ~ age + edu + female,
data = earnings_df)
m4 <- lm(earn ~ age + edu + female + black + other,
data = earnings_df)
m5 <- lm(earn ~ age + edu + female + black + other + edu*female,
data = earnings_df)
stargazer(m1, m2, m3, m4, m5,
type = "text")
## remove non-numeric variables
earnings_df_cat <- earnings_df %>%
select(-female, -black, -other)
## correlation matrix
## set use = "complete.obs" to ignore observations with NAs
cor(earnings_df_cat, use = "complete.obs")
## remove non-numeric variables
earnings_df_cat <- earnings_df %>%
select(-female, -black, -other, -sex, -race)
## correlation matrix
## set use = "complete.obs" to ignore observations with NAs
cor(earnings_df_cat, use = "complete.obs")
## remove non-numeric variables
earnings_df_cat <- earnings_df %>%
select(-female, -black, -other, -sex, -race, -unique_id)
## correlation matrix
## set use = "complete.obs" to ignore observations with NAs
cor(earnings_df_cat, use = "complete.obs")
## run models
m4 <- lm(earn ~ age + edu + female + black + other,
data = earnings_df)
m5 <- lm(earn ~ age + edu + female + black + other + edu*female,
data = earnings_df)
m6 <- lm(earn ~ age + edu + female + black + other + edu*black + edu*other,
data = earnings_df)
## examine models and tune the star level
stargazer(m4, m5, m6,
star.char = c("*", "**", "***"),
star.cutoffs = c(0.05, 0.01, 0.001),
type="text")
## examine models and tune the star level
stargazer(m4, m5, m6,
star.char = c("*", "**", "***"),
star.cutoffs = c(0.05, 0.01, 0.001),
type="latex")
## examine models and tune the star level
stargazer(m4, m5, m6,
star.char = c("*", "**", "***"),
star.cutoffs = c(0.05, 0.01, 0.001),
type="text")
## defualt coefficient plot
coefplot(m5)
## the default innerCI is 1, which is 1 se around the point estimate
## the default outerCI is 2, which is 2 se around the point estimate
## you can set both to 1.96, which is the 95% confidence interval of betas
coefplot(m5, intercept = F, innerCI = 1.96, outerCI = 1.96)
## coefplot is build upon ggplot2
## almost all functions in ggplot2 would work
coefplot(m5, intercept = F, innerCI = F, outerCI = 1.96,
color = "black",
title = "Coefficient Plot for Model 5") +
theme_bw() +
xlab("Coefficient") +
ylab("Variables") +
theme(plot.title = element_text(hjust = 0.5)) ## center the title
## coefplot is build upon ggplot2
## almost all functions in ggplot2 would work
coefplot(m5, intercept = F, innerCI = F, outerCI = 1.96,
color = "red3",
title = "Coefficient Plot for Model 5") +
theme_bw() +
xlab("Coefficient") +
ylab("Variables") +
theme(plot.title = element_text(hjust = 0.5)) ## center the title
## first, we create a dataframe with all predictor variables
## only the key predictor varies, while the others remain at the mean
pred_IV <- data.frame(edu = rep(0:15, 2)) %>%         ## first, create a df with values of your key predictor
mutate(female = c(rep(0, 16), rep(1, 16)),          ## b/c we are looking at interaction effects,
## give gender two values, otherwise fix it at mean
age_recode =  mean(earnings_df$age_recode, na.rm = T),   ## fix other variables at mean
black = mean(earnings_df$black),
other = mean(earnings_df$other))
## examine the df
head(pred_IV, 20) %>% kbl("html") %>% kable_classic_2(full_width = F)
## first, we create a dataframe with all predictor variables
## only the key predictor varies, while the others remain at the mean
pred_IV <- data.frame(edu = rep(0:15, 2)) %>%         ## first, create a df with values of your key predictor
mutate(female = c(rep(0, 16), rep(1, 16)),          ## b/c we are looking at interaction effects,
## give gender two values, otherwise fix it at mean
age =  mean(earnings_df$age, na.rm = T),   ## fix other variables at mean
black = mean(earnings_df$black),
other = mean(earnings_df$other))
## examine the df
head(pred_IV, 20) %>% kbl("html") %>% kable_classic_2(full_width = F)
## use `predict` to predict the Y
predicted_earning <- predict(m5,                      ## the model you are using
pred_IV,                ## the df you use for predicting
interval = "confidence", ## set CI
level = 0.95)
## bind the columns
pred_result <- cbind(pred_IV, predicted_earning)
## check df
head(pred_result, 20) %>% kbl("html") %>% kable_classic_2(full_width = F)
## plot
pred_result %>%
mutate(gender = ifelse(female == 0, "Male", "Female")) %>%       ## convert dummy to character variable
ggplot(aes(x = edu, y = fit)) +
geom_line(aes(linetype = gender)) +                              ## group linetype by gender
geom_ribbon(aes(ymin = lwr, ymax = upr, fill = gender), alpha = 0.3) +   # add 95% CI
theme_bw() +
labs(x = "Years of Education",
y = "Predicted Earnings") +
ggtitle("Predicted Earnings by Education and Gender",
subtitle = "(Modeled with interaction between education and gender)")
0:15
rep(0:15,2)
## first, we create a dataframe with all predictor variables
## only the key predictor varies, while the others remain at the mean
pred_IV <- data.frame(edu = rep(0:15, 2)) %>%         ## first, create a df with values of your key predictor
mutate(female = c(rep(0, 16), rep(1, 16)),          ## b/c we are looking at interaction effects,
## give gender two values, otherwise fix it at mean
age =  mean(earnings_df$age, na.rm = T),   ## fix other variables at mean
black = mean(earnings_df$black),
other = mean(earnings_df$other))
View(pred_IV)
predict(m5,                      ## the model you are using
pred_IV,                ## the df you use for predicting
interval = "confidence", ## set CI
level = 0.95)
## bind the columns
pred_result <- cbind(pred_IV, predicted_earning)
View(pred_result)
## plot
pred_result %>%
mutate(gender = ifelse(female == 0, "Male", "Female")) %>%       ## convert dummy to character variable
ggplot(aes(x = edu, y = fit, group = gender)) +
geom_line(aes(linetype = gender)) +                              ## group linetype by gender
geom_ribbon(aes(ymin = lwr, ymax = upr, fill = gender), alpha = 0.3) +   # add 95% CI
theme_bw() +
labs(x = "Years of Education",
y = "Predicted Earnings") +
ggtitle("Predicted Earnings by Education and Gender",
subtitle = "(Modeled with interaction between education and gender)")
## plot
pred_result %>%
mutate(gender = ifelse(female == 0, "Male", "Female")) %>%       ## convert dummy to character variable
ggplot(aes(x = edu, y = fit, group = gender)) +
geom_line(aes(linetype = gender)) +                              ## group linetype by gender
geom_ribbon(aes(ymin = lwr, ymax = upr, fill = gender), alpha = 0.1) +   # add 95% CI
theme_bw() +
labs(x = "Years of Education",
y = "Predicted Earnings") +
ggtitle("Predicted Earnings by Education and Gender",
subtitle = "(Modeled with interaction between education and gender)")
## plot
pred_result %>%
mutate(gender = ifelse(female == 0, "Male", "Female")) %>%       ## convert dummy to character variable
ggplot(aes(x = edu, y = fit, group = gender)) +
geom_line(aes(linetype = gender)) +                              ## group linetype by gender
geom_ribbon(aes(ymin = lwr, ymax = upr, fill = gender), alpha = 0.3) +   # add 95% CI
theme_bw() +
labs(x = "Years of Education",
y = "Predicted Earnings") +
ggtitle("Predicted Earnings by Education and Gender",
subtitle = "(Modeled with interaction between education and gender)")
