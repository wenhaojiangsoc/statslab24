---
title: "Problem Set 4"
author: "SOC-GA 2332 Intro to Stats (Fall 2021)"
date: 'Due: Friday, Dec. 10th, 11:59 pm'
output:
  pdf_document: default
  html_document:
    df_print: paged
---

# Instructions

\begin{enumerate}
    \item Submit two files for each problem set. The first is a \textbf{R Markdown} (\texttt{.Rmd}) file that can be run without error from start to end. The second is a \textbf{PDF} rendered from your R Markdown file or created using \LaTeX{}. 
    \item Name your files following this convention: \texttt{[Last Name]\_ps1.Rmd} and \texttt{[Last Name]\_ps1.pdf}. 
    \item Both files should be submitted to the TA via e-mail (di.zhou@nyu.edu) before the time specified above.
    \item You are given plenty of time to work on the problem set. Please plan ahead and start early. \textbf{Except for special circumstances, the TA will not accept last-minute questions asked on the day when the problem set is due}.
    \item You are encouraged to discuss the problems with your classmates. Notice as well that we have students in this class who are not in your cohort. It would be great if you could reach out to them and work together. But \textbf{the R Markdown and PDF files that you submit have to be created on your own}.
    \item Comment on your code wherever possible and explain your ideas in detail. You will get credit for showing the steps you take and for explaining your reasoning, even if you do not get the correct final result.
\end{enumerate}

\noindent\rule{16.5cm}{0.4pt}
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

library(pacman)
p_load(tidyverse, kableExtra)

```

# Part 1 Forensic Statistics and the Chi-Square Test  

Human beings are very bad at making up numbers. If you are told to come up with a sequence of random numbers, you will likely end up following some sort of pattern that is far from being random. For example, to pretend that your are selecting numbers at random, you will tend to pick "random-looking" numbers like 48 more often than "nonrandom-looking" numbers like 100. Picking "random-looking" numbers more often than "nonrandom-looking" ones is something that shouldn't occur randomly. The Chi-Square test provides us with a useful framework to formally detect this. One of its many applications is the detection of election fraud.  
  
  Imagine that you are part of a team of international observers that has been called to assess whether there is evidence of fraud in a general election that took place in a foreign country. Two candidates were on the ballot: Candidate A (the incumbent) and Candidate B. Candidate A won the election with 62% of the votes. One week after the election, some raised concerns about the validity of this result and suggested the possibility that election fraud could have occurred.^[These are real data from the Iranian election that was held on June 12, 2009. This exercise has been inspired by one example used by Dan Levy in his "Advanced Quantitative Methods" course at the Harvard Kennedy School.]  
  
  The setting is the following. There were 116 voting stations across the country. Each voting station has sent you the count of votes that went to Candidate A. To assess election fraud, you will be evaluating the frequency with which the final digit in each of these counts appears in the data. The table below shows precisely this. The first column list all values that the last digit in a vote count can take on (0 to 9). For example, if the number of votes that went to Candidate A in voting station #24 was 659, the final digit of this vote count would be 9. The second column tells you the frequency with which each final digit appeared across all voting stations. Among the 116 voting stations, 11 reported a number of votes for Candidate A that ended in 1, 8 reported a number of votes for Candidate A that ended in 2, and so on.
  
  
  
```{r , echo=FALSE}

tbl <- tibble(`Final Digit` = c(seq(1, 9, 1), 0, "Total"),
              `Observed Count` = c(11, 8, 9, 10, 5, 14, 20, 17, 13, 9, 116))
              
tbl %>% kbl(booktabs = T, align = "c") %>% kable_styling(full_width = F)

```
  
  Answers the questions below:  
  
  1.[4pts] If the election results had not been manipulated (i.e., fraud did not occur), what would be your best guess for the number of voting stations that reported a vote count for Candidate A ending in 1? And in 6? And in 9?   
  
  2.[4pts] If the election results had not been manipulated, what is the probability that a vote count for Candidate A ended in 1? And in 6? And in 9?  
  
  3.[4pts] Following the logic from questions 1 and 2, complete columns 3 to 5 in the table below.

```{r , echo = F}

tbl2 <- tibble(`Final Digit` = c(seq(1, 9, 1), 0, "Total"),
              `Observed Count` = c(11, 8, 9, 10, 5, 14, 20, 17, 13, 9, 116),
              `Observed Share` = c(rep("", 10), "N/A"),
              `Expected Count` = c(rep("", 10), "N/A"), 
              `Expected Share` = c(rep("", 10), "N/A"),
              `Chi-Square Stat` = c(rep("", 11))
              )
              
tbl2 %>% 
  kbl(booktabs = T, align = "c") %>% 
  kable_styling(latex_options = "striped", full_width = F)

```
  4.[4pts] Do the expected counts and shares match the observed ones? Just by looking at these discrepancies, are you able to determine whether fraud occurred?  
  
  
  5.[4pts] Formally define the null and alternative hypotheses for the test of "no fraud" in that election.  

  
  6.[4pts] Calculate the $\chi^2$ statistics for each row in the table (Column 6). Input your results in the table. Keep in mind that the $\chi^2$ statistic is computed form counts, not from proportions.  

  7.[4pts] Calculate the $\chi^2$ statistic for the entire distribution of outcomes and calculate the p-value.   

  8.[4pts] Do you reject or fail to reject the null hypothesis of no fraud (use the significance level at 0.05).   

  9.[8pts] Write 3 paragraphs reporting your findings and explaining the logic that you followed to detect fraud in this election. You are writing this to someone who understands the concepts of sampling and randomness, but does not know what a Chi-Square test is. Imagine that this analysis is part of an academic article, and you have been invited to write a non-technical summary of your findings for the Upshot or Wonkblog.  
  


# Part 2: Fixed Effects and Random Effects Models

In this exercise, we will use the dataset `sibling_data.dta` to study the effect of mother experiencing stress in pregnancy on a child’s birth weight. All variables are described in the table below.
  
Variable Name|  Variable Detail
------------|----------------------------
 *Group Variable* | 
 `householdid` | Unique household id; Siblings from the same household share the same household id
               |
 *Dependent Variable* | 
 `birthwt`   | birth weight measured in pounds  
              |
 *Independent Variable* | 
 `stress`    | Whether or not mother experienced stress in pregnancy (Yes=1; No=0)
 `age`       | Age
 `female`    | Female=1; Male=0
 `magebirth` | Mother’s Age at Birth
 `numsibling`| Number of Sibling
 `meduy`    | Mother’s Years of Schooling
 `feduy`    | Father’s Years of Schooling
 

1.[10pts] Import the dataset `sibling_data.dta` to your R environment. Including all independent variables, build an OLS model, a fixed effects model, and a random effects model (you can use the `plm` R package). Summarize regression results in a table. Make sure to label your models in your table (the `column.labels` argument in `stargazer()`).  


2.[3pts] Interpret the coefficient of `stress` in the OLS model.  


3.[3pts] Interpret the coefficient of `stress` in the fixed effects model.  
  
  
4.[3pts] Interpret the coefficient of `magebirth` in the fixed effects model.  
  

5.[4pts] Perform a F-test to compare the OLS and the fixed effects models and interpret outputs (use `pFtest` from the `plm` R package).  
  

6.[4pts] Compared to an OLS model, what are the benefits of using a fixed effects model?  


7.[4pts] Why don’t we get coefficients of `meduy`, `feduy`, and `numsibling` in the fixed effects model?  
  
  
8.[4pts] Why do we get coefficients of `meduy`, `feduy`, and `numsibling` in the random effects (random intercepts) model?  


9.[4pts] How does the coefficient of `stress` change between (a) the OLS model and the fixed effects model and (b) the OLS model and the random effects model? What could be the potential causes that lead to these changes?  


10.[6pts] Perform a Hausman test to compare fixed-effects and random-effects models (figure out how to use the `phtest` function from the `plm` R package; you might look into the help page and examples by typing ?plm::phtest into your console)  

  (a) What is the null hypothesis of this model? What is the alternative hypothesis?  
  
  (b) Is the null hypothesis rejected? Based on the test, which model would you use?  
  

# Part 3 Data Transformation

[15pts] Import \texttt{parent\_inc.csv} to your R environment. The data frame looks like this: 

\begin{table}[!h]
\centering
\begin{tabular}{|ccccc|}
\hline
famid & father\_name & mother\_name & father\_income & mother\_income \\ \hline
1     & Arthur       & Jess         & 42000          & 45000          \\
2     & Harry        & Pam          & 35000          & 24000          \\
3     & Matt         & Mary         & 78000          & 55000          \\ \hline
\end{tabular}
\end{table}

\noindent Then, use either \texttt{tidyverse} functions with the piping syntax or the \texttt{data.table} functions (\texttt{dcast} and \texttt{melt}) to transform the data frame to the following structure: 

\begin{table}[!h]
\centering
\begin{tabular}{|cccc|}
\hline
famid & type   & name   & income \\ \hline
1     & father & Arthur & 42000  \\
1     & mother & Jess   & 45000  \\
2     & father & Harry  & 35000  \\
2     & mother & Pam    & 24000  \\
3     & father & Matt   & 78000  \\
3     & mother & Mary   & 55000 \\ \hline
\end{tabular}
\end{table}

\noindent Make sure to document the steps you take in your code and display the tidied data frame in your PDF document.

\vspace{3mm}

\noindent \textit{Hints}: 
\begin{itemize}
    \item You can use \texttt{str\_remove()} or \texttt{str\_extract()} functions for mutating a new variable that extracts part of the text from a string, for example extracting ``father" from ``father\_name".
    \item You can format tables using \texttt{kbl()} from the \texttt{kableExtra} package.
\end{itemize}

```{r }

```

